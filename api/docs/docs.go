// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/allMeans/{iata}/{start}": {
            "get": {
                "description": "Retrieve mean measurements for all sensors at a given location on a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get All Mean Measurements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "IATA code for the location",
                        "name": "iata",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MeanMeasurementResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/mesure/{mesures}/{iata}/{start}": {
            "get": {
                "description": "Retrieve the mean measurement for a given sensor and location on a specific date",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get Mean Measurement",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of measurement",
                        "name": "mesures",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IATA code for the location",
                        "name": "iata",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date in YYYY-MM-DD format",
                        "name": "start",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.MeasurementResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/mesure/{mesures}/{iata}/{start}/{end}": {
            "get": {
                "description": "Retrieve measurements for a given sensor, location, and time range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "measurements"
                ],
                "summary": "Get Measurements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Type of measurement",
                        "name": "mesures",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "IATA code for the location",
                        "name": "iata",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time in YYYY-MM-DD-HH format",
                        "name": "start",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End time in YYYY-MM-DD-HH format",
                        "name": "end",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.MeasurementResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.MeanMeasurementResponse": {
            "type": "object",
            "properties": {
                "mean_value": {
                    "type": "number"
                },
                "measurement": {
                    "type": "string"
                }
            }
        },
        "main.MeasurementResponse": {
            "type": "object",
            "properties": {
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
